<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Boilerplate code on TLang</title>
    <link>https://tlang.dev/tags/boilerplate-code/</link>
    <description>Recent content in Boilerplate code on TLang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 01 Feb 2024 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://tlang.dev/tags/boilerplate-code/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>TLang versus generatibe AI</title>
        <link>https://tlang.dev/blog/tlang-versus-generative-ai/</link>
        <pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate>
        
        <guid>https://tlang.dev/blog/tlang-versus-generative-ai/</guid>
        <description>Introduction: In the ever-evolving world of programming, efficiency and innovation are key. As developers, we are constantly seeking tools that can streamline our work, improve code quality, and foster creativity. Two such tools that have emerged as game-changers are TLang and generative AI.
What is TLang? TLang is a small programming language designed to generate code in various languages such as Java, Kotlin, TypeScript, and Dart. It allows developers to create code templates, which can be incredibly useful for a number of reasons.</description>
      </item>
      
    
  </channel>
</rss>