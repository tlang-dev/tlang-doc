[{"content":"The TLang code is written in .tlang files. They are composed of different parts that are not mandatory. The first part is the context of the file, mainly the packages that are imported or exposed. More will be said latter.\nThen in the sections of the file are described. There are three types: * model, it represents the objects and the structure of your program * helper, it contains the logic. Everything that will be executed is written in this section * template, it defines the templates that will be used to generate the final code\nYou don\u0026rsquo;t need to use all of them in every file. It is actually a good practice to separate correctly the different sections, especially if your project grows fast.\nThis is an example of an tlang file:\nuse myFile1 expose * model { } helper { } tmpl { }  At that point, this program does nothing, it won\u0026rsquo;t even run but it shows the different parts.\n","description":"Language specification overview","id":0,"section":"docs","tags":null,"title":"Overview","uri":"https://tlang.dev/docs/specs/overview/"},{"content":"Markdown here\n","description":"Installing TLang","id":1,"section":"docs","tags":null,"title":"Installation","uri":"https://tlang.dev/docs/gettingstarted/installation/"},{"content":"Multi-languages\n","description":"Multi-language support","id":2,"section":"features","tags":null,"title":"Multi-languages","uri":"https://tlang.dev/features/multi-languages/"},{"content":" Classic \u0026ldquo;Hello, World\u0026rdquo; Main.tlang:\nuse io.Terminal helper { func main() { Terminal.println(\u0026quot;Hello, World !\u0026quot;) } }  manifest.yaml\nname: HelloWorld project: IntegrationTests organisation: TLang version: 1.0.0 stability: alpha releaseNumber: 1 dependencies: - TLang/IO/Terminal 1.0.0:alpha:1 io  Generate \u0026ldquo;Hello, World\u0026rdquo; in Scala Main.tlang:\nuse io.Terminal use gen.Generator helper { func main() { Terminal.println(Generator.generate(helloWorld())) } } tmpl[scala] helloWorld { pkg hello_world impl HelloWorld { func main(args: String[]) { println(\u0026quot;Hello, World!\u0026quot;) } } }  manifest.yaml\nname: HelloWorldInScala project: IntegrationTests organisation: TLang version: 1.0.0 stability: alpha releaseNumber: 1 dependencies: - TLang/IO/Terminal 1.0.0:alpha:1 io - TLang/Generator/Generator 1.0.0:alpha:1 gen  ","description":"Running the \"Hello world!\" programm with TLang","id":6,"section":"docs","tags":null,"title":"Hello world !","uri":"https://tlang.dev/docs/gettingstarted/helloworld/"},{"content":"Simple to learn\n","description":"TLang is simple to learn","id":7,"section":"features","tags":null,"title":"Simple to learn","uri":"https://tlang.dev/features/simple/"},{"content":"Many templates\n","description":"Many templates available to use","id":8,"section":"features","tags":null,"title":"Many templates","uri":"https://tlang.dev/features/many-templates/"},{"content":"IDE support\n","description":"TLang is supported by IDE","id":9,"section":"features","tags":null,"title":"IDE support","uri":"https://tlang.dev/features/ide-support/"}]